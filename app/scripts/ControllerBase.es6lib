export default class ControllerBase {
  constructor($scope) {
    this.$scope = $scope; // view model
  }

  apply(func, that = this) {
    const wrap = function() {
      const args = arguments;
      return this.$scope.$apply(() => func.apply(that, args));
    };
    return wrap.bind(this);
  }

  // a failed implementation of apply :(
  applyFailed(func) {
    return this.$scope.$apply.bind(this.$scope, func);
  }

  _calcPages(results, pageSize) {
    const pages = new Array(Math.ceil(results.length / pageSize));

    if (pages.length <= 0) {
      return pages;
    }

    for (let i = 0; i < pages.length; i++) {
      pages[i] = {
        startIndex: i * pageSize,
        start: i * pageSize + 1,
        end: (i + 1) * pageSize,
      }
    }

    pages[pages.length - 1].end = results.length;

    return pages;
  }
}
