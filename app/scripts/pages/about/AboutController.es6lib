import ControllerBase from '../../ControllerBase.es6lib';
import Config from '../../Config.es6lib';
import Utils from '../../utils/Utils.es6lib';
import Tune from '../../models/Tune.es6lib';
import Tunebook from '../../models/Tunebook.es6lib';

export default class AboutController extends ControllerBase {
  constructor($scope, $rootScope, $routeParams, $http, $timeout, $location) {
    super($scope);
    this.$routeParams = $routeParams;
    this.$http = $http;
    this.$timeout = $timeout;
    this.$location = $location;
    this.config = Config;
    this.utils = Utils;

    this.showLoading = true;
    this.showNoResults = false;
    this.showResults = false;
    this.showTunebooksLoading = true;
    this.showTunebooksNoResults = false;
    this.showTunebooksResults = false;

    document.title = 'Tunepal.org > About';

    this._fetchDownloads();
    this._fetchTunebooks();
  }

  _fetchTunebooks() {
    const url = `${this.config.ApiDomain}/api/Sources`;

    this.$http.get(url)
    .success(rawTunebooks => {
      this.tunebooks = [];

      for (const rawTunebook of rawTunebooks) {
        this.tunebooks.push(new Tunebook(rawTunebook));
      }
      this._initTunebooks();
    });
  }

  _initTunebooks() {
    if (this.tunebooks.length === 0) {
      this.showNoTunebooksResults = true;
    }
    else {
      this.showTunebooksResults = true;
    }

    this.showTunebooksLoading = false;
  }

  _fetchDownloads() {
    const url = `${this.config.ApiDomain}/api/downloads`;

    this.$http.get(url)
    .success(rawTunes => {
      this.tunes = [];

      for (const rawTune of rawTunes) {
        this.tunes.push(new Tune(rawTune));
      }
      this._initTunes();
    });
  }

  _initTunes() {
    if (this.tunes.length === 0) {
      this.showNoResults = true;
    }
    else {
      this.pageSize = 10;
      this.pages = this._calcPages(this.tunes, this.pageSize);
      this._initUi();
      this.showResults = true;
    }

    this.showLoading = false;
  }

  _initUi() {
  }
}
