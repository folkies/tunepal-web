import Config from '../../Config.es6lib';
import Tune from '../../models/Tune.es6lib';
import Utils from '../../utils/Utils.es6lib';

export default class EuropeanaController {
  constructor($scope, $rootScope, $routeParams, $http) {
    this.config = Config;
    this.utils = Utils;
    this.$http = $http;

    this.tunepalId = $routeParams['tunepalId'];

    if (Utils.tuneCache && Utils.tuneCache.tunepalId === this.tunepalId) {
      this.tune = Utils.tuneCache;
      this._search();
    }
    else {
      const url = `${this.config.ApiDomain}/api/Tunes/${this.tunepalId}`;

      this.$http.get(url)
      .success(rawTune => {
        this.tune = new Tune(rawTune);
        Utils.tuneCache = this.tune;
        this._search();
      });
    }
  }

  _search() {
    const apiDomain = this.config.EuropeanaApiDomain;
    const apiKey = this.config.EuropeanaApiKey;
    const query = this.tune.titleEncoded;
    const qf = 'TYPE:SOUND';
    const start = 1;
    const maxNumItems = 20;
    const profile = 'standard';

    const url = `${apiDomain}/search.json?wskey=${apiKey}&query=${query}&qf=${qf}&start=${start}&rows=${maxNumItems}&profile=${profile}`;

    this.$http.get(url)
    .success(data => {
      console.log(data);
      this.result = data;
      this._calcPages();
    });

    document.title = `Tunepal.org / Europeana Search / ${this.tune.title}`;
  }

  _calcPages() {
    this.pages = new Array(Math.ceil(this.result.items.length / 10));

    for (let i = 0; i < this.pages.length; i++) {
      this.pages[i] = {
        startIndex: i * 10,
        start: i * 10 + 1,
        end: (i + 1) * 10,
      }
    }

    this.pages[this.pages.length - 1].end = this.result.items.length;
  }

  link(tune) {
    const europeanaIdEncoded = encodeURIComponent(tune.id);
    location.href = `/#!/tune/${this.tune.tunepalId}${europeanaIdEncoded}`;
  }
}
